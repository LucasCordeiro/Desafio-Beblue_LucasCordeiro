//
//  MarsPhotosDetailViewController.swift
//  Desafio Beblue_LucasCordeiro
//
//  Created by Lucas Cordeiro on 04/03/19.
//  Copyright (c) 2019 Sparks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Lottie

protocol MarsPhotosDetailDisplayLogic: class {
    func displayPhotosInfo(viewModel: MarsPhotosDetail.LoadPhotosInfo.ViewModel)
    func displayButtonName(viewModel: MarsPhotosDetail.ChangeButtonName.ViewModel)
}

class MarsPhotosDetailViewController: UIViewController, MarsPhotosDetailDisplayLogic {

    //
    // MARK: - Scene Properties -
    var interactor: MarsPhotosDetailBusinessLogic?
    var router: (NSObjectProtocol & MarsPhotosDetailRoutingLogic & MarsPhotosDetailDataPassing)?

    //
    // MARK: - Outlets -
    @IBOutlet weak var roverButtonOutlet: UIButton!
    @IBOutlet weak var imageViewOutlet: UIImageView!
    @IBOutlet weak var imageLoadingView: LOTAnimationView!

    //
    // MARK: - Routing -
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    //
    // MARK: - Life Cycle Methods -
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    static func storyboardInit() -> MarsPhotosDetailViewController {
        let storyboard = UIStoryboard(name: "MarsPhotosDetail", bundle: nil)
        guard let viewController =
            storyboard.instantiateViewController(withIdentifier:
                MarsPhotosDetailViewController.classNameDescription()) as? MarsPhotosDetailViewController else {
                    assertionFailure("No view controller with" +
                        "\(MarsPhotosDetailViewController.classNameDescription()) identifier")
                    return MarsPhotosDetailViewController()
        }

        return viewController
    }

    override func viewDidLoad() {
        super.viewDidLoad()

        loadPhotosInfo()
    }

    //
    // MARK: - Request Methods -
    func loadPhotosInfo() {
        playImageLoadingView()

        let request = MarsPhotosDetail.LoadPhotosInfo.Request()
        interactor?.loadPhotosInfo(request: request)
    }

    func changeButtonName() {
        let currentButtonName = roverButtonOutlet.title(for: UIControl.State()) ?? ""
        let request = MarsPhotosDetail.ChangeButtonName.Request(currentButtonName: currentButtonName)
        interactor?.changeButtonName(request: request)
    }

    //
    // MARK: - Display Methods -
    func displayPhotosInfo(viewModel: MarsPhotosDetail.LoadPhotosInfo.ViewModel) {

        let buttonName = viewModel.buttonName
        let photosUrl = viewModel.photosUrl

        roverButtonOutlet.setTitle(buttonName, for: UIControl.State())
        imageViewOutlet.sd_setImage(with: photosUrl, placeholderImage: nil) { [weak self] (_, error, _, _) in
            DispatchQueue.main.async {
                self?.stopImageLoadingView()
                if error != nil {
                    self?.imageViewOutlet.image = #imageLiteral(resourceName: "mars.png")
                }
            }
        }
    }

    func displayButtonName(viewModel: MarsPhotosDetail.ChangeButtonName.ViewModel) {
        let buttonName = viewModel.buttonName

        roverButtonOutlet.setTitle(buttonName, for: UIControl.State())
    }

    //
    // MARK: - Action Methods -
    @IBAction func roverButtonPressed(_ sender: UIButton) {
        changeButtonName()
    }

    //
    // MARK: - Configure Methods -
    private func setup() {
        let viewController = self
        let interactor = MarsPhotosDetailInteractor()
        let presenter = MarsPhotosDetailPresenter()
        let router = MarsPhotosDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    //
    // MARK: - Auxiliar Methods -
    private func playImageLoadingView() {
        imageLoadingView.loopAnimation = true
        imageLoadingView.isHidden = false
        imageViewOutlet.startAnimating()
    }

    private func stopImageLoadingView() {
        imageLoadingView.isHidden = true
        imageViewOutlet.stopAnimating()
    }
}
