//
//  MarsRoverViewController.swift
//  Desafio Beblue_LucasCordeiro
//
//  Created by Lucas Cordeiro on 03/03/19.
//  Copyright (c) 2019 Sparks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MarsRoverDisplayLogic: class {
    func displayMarsPhotos(viewModel: MarsRover.ListMarsRoverPhotos.ViewModel)
}

class MarsRoverViewController: UIViewController, MarsRoverDisplayLogic {

    //
    // MARK: - Scene Delegates -
    var interactor: MarsRoverBusinessLogic?
    var router: (NSObjectProtocol & MarsRoverRoutingLogic & MarsRoverDataPassing)?

    //
    // MARK: - Outlets -
    @IBOutlet weak var collectionView: UICollectionView!

    //
    // MARK: - Local Properties -
    private var marsRoverPhotos: [MarsRover.ListMarsRoverPhotos.ViewModel.MarsRoverPhoto] = []

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = MarsRoverInteractor()
        let presenter = MarsRoverPresenter()
        let router = MarsRoverRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        loadMarsRoversPhotos()
    }

    // MARK: Do something

    //@IBOutlet weak var nameTextField: UITextField!

    func loadMarsRoversPhotos() {
        let request =
            MarsRover.ListMarsRoverPhotos.Request(filter: RoverPhotosFilter.curiosity.stringValue(), date: nil)
        interactor?.listMarsRoverPhotos(request: request)
    }

    func displayMarsPhotos(viewModel: MarsRover.ListMarsRoverPhotos.ViewModel) {

        marsRoverPhotos = viewModel.marsRoverPhotos

        print("")
        collectionView.reloadData()
    }
}
