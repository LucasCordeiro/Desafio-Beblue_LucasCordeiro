//
//  MarsRoverInteractor.swift
//  Desafio Beblue_LucasCordeiro
//
//  Created by Lucas Cordeiro on 03/03/19.
//  Copyright (c) 2019 Sparks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MarsRoverBusinessLogic {
    func listMarsRoverPhotos(request: MarsRover.ListMarsRoverPhotos.Request)
    func paginateMarsRoverPhotos(request: MarsRover.PaginateMarsRoverPhotos.Request)
}

protocol MarsRoverDataStore {
}

class MarsRoverInteractor: MarsRoverBusinessLogic, MarsRoverDataStore {
    //
    // MARK: - Scene Delegates -
    var presenter: MarsRoverPresentationLogic?
    var worker: MarsRoverWorker?

    //
    // MARK: - Local Properties -
    private var lastDate: Date = Date()

    //
    // MARK: - Mars Rover Methods -
    func listMarsRoverPhotos(request: MarsRover.ListMarsRoverPhotos.Request) {
        worker = MarsRoverWorker()
        if let date = request.date {
            lastDate = date
        }

        let dateString = lastDate.stringWithFormat(dateFormat: "yyyy-MM-dd")
        worker?.listMarsRoverPhotos(filter: request.filter,
                                    date: dateString,
                                    completion: { [weak self] (photosInfo, isError, errorMessage)  in
            let response =  MarsRover.ListMarsRoverPhotos.Response(photosInfo: photosInfo,
                                                                   isError: isError,
                                                                   errorMessage: errorMessage)
            self?.presenter?.presentListMarsRoverPhotos(response: response)
            })
    }

    func paginateMarsRoverPhotos(request: MarsRover.PaginateMarsRoverPhotos.Request) {
        worker = MarsRoverWorker()
        lastDate = lastDate.dayBefore
        let dateString = lastDate.stringWithFormat(dateFormat: "yyyy-MM-dd")
        worker?.listMarsRoverPhotos(filter: request.filter,
                                    date: dateString,
                                    completion: { [weak self] (photosInfo, isError, errorMessage)  in
            let response =  MarsRover.PaginateMarsRoverPhotos.Response(photosInfo: photosInfo,
                                                                       isError: isError,
                                                                       errorMessage: errorMessage)
            self?.presenter?.presentPaginateMarsRoverPhotos(response: response)
        })
    }
}
