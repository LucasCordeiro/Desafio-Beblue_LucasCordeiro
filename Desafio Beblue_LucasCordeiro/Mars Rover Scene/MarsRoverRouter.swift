//
//  MarsRoverRouter.swift
//  Desafio Beblue_LucasCordeiro
//
//  Created by Lucas Cordeiro on 03/03/19.
//  Copyright (c) 2019 Sparks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol MarsRoverRoutingLogic {
    func routeToPhotosDetail(segue: UIStoryboardSegue?)
    func displayError(message: String)
}

protocol MarsRoverDataPassing {
    var dataStore: MarsRoverDataStore? { get }
}

class MarsRoverRouter: NSObject, MarsRoverRoutingLogic, MarsRoverDataPassing {
    weak var viewController: MarsRoverViewController?
    var dataStore: MarsRoverDataStore?

    //
    // MARK: - Routing -
    func routeToPhotosDetail(segue: UIStoryboardSegue?) {
        if let segue = segue {
            guard let destinationVC = segue.destination as? MarsPhotosDetailViewController,
            var destinationDS = destinationVC.router?.dataStore,
            let dataStore = dataStore
                else {
                fatalErrorPhotosDetailNavigation()
                return
            }

            passDataDetailView(source: dataStore, destination: &destinationDS)
        } else {
            let destinationVC = MarsPhotosDetailViewController.storyboardInit()

            guard var destinationDS = destinationVC.router?.dataStore,
                let dataStore = dataStore,
                let viewController = viewController
                else {
                    fatalErrorPhotosDetailNavigation()
                    return
            }

            passDataDetailView(source: dataStore, destination: &destinationDS)
            navigateDetailView(source: viewController, destination: destinationVC)
        }
    }

    //
    // MARK: - Navigation -
    func navigateDetailView(source: MarsRoverViewController, destination: MarsPhotosDetailViewController) {
        guard let navigationController = source.navigationController else {
            assertionFailure("No navigation controller on \(MarsRoverViewController.classNameDescription())")
            return
        }

        navigationController.pushViewController(destination, animated: true)
    }

    //
    // MARK: - Passing data -
    func passDataDetailView(source: MarsRoverDataStore, destination: inout MarsPhotosDetailDataStore) {
        guard let roverPhotoInfo = source.selectedRoverPhotoInfo else {
            fatalErrorPhotosDetailNavigation()
            return
        }
        destination.roverPhotoInfo = roverPhotoInfo
    }

    //
    // MARK: - Error Handle -
    private func fatalErrorPhotosDetailNavigation() {
        assertionFailure("Error while navigating to MarsPhotosDetailViewController")
    }

    func displayError(message: String) {
        let alertController = UIAlertController(title: "Error", message: message, preferredStyle: .alert)
        let okayAction = UIAlertAction(title: "Okay", style: .default, handler: nil)
        alertController.addAction(okayAction)

        viewController?.present(alertController, animated: true, completion: nil)
    }
}
