//
//  MarsRoverPresenter.swift
//  Desafio Beblue_LucasCordeiro
//
//  Created by Lucas Cordeiro on 03/03/19.
//  Copyright (c) 2019 Sparks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MarsRoverPresentationLogic {
    func presentListMarsRoverPhotos(response: MarsRover.ListMarsRoverPhotos.Response)
    func presentPaginateMarsRoverPhotos(response: MarsRover.PaginateMarsRoverPhotos.Response)
    func presentError(message: String)

}

class MarsRoverPresenter: MarsRoverPresentationLogic {

    //
    // MARK: - Scene Properties -
    weak var viewController: MarsRoverDisplayLogic?

    //
    // MARK: - Present Methods -
    func presentListMarsRoverPhotos(response: MarsRover.ListMarsRoverPhotos.Response) {

        if response.isError {
            presentError(message: response.errorMessage ??
                "Error while listing photos. Try again later.")
        } else {
            let marsRoverPhotoVM = marsRoverPhotoViewModel(from: response.photosInfo)
            viewController?.displayMarsPhotos(viewModel: marsRoverPhotoVM)
        }
    }

    func presentPaginateMarsRoverPhotos(response: MarsRover.PaginateMarsRoverPhotos.Response) {

        if response.isError {
            presentError(message: response.errorMessage ??
                "Error while loading photos. Try again later.")
        } else {
            let marsRoverPhotoVM = marsRoverPhotoViewModel(from: response.photosInfo)
            viewController?.displayMarsPhotosPagination(viewModel: marsRoverPhotoVM)
        }
    }

    func presentError(message: String) {
        viewController?.displayError(message: message)
    }

    //
    // MARK: - Auxiliar Methods -

    /// Create a viewModel setting phoros URL
    /// from an array of RoverPhotoInfo
    ///
    /// - Parameter photosInfo: Photos indo to populate viewModel
    /// - Returns: View Model with photos URL
    func marsRoverPhotoViewModel(from photosInfo: [RoverPhotoInfo]?) -> MarsRover.ListMarsRoverPhotos.ViewModel {
        var marsRoverPhotos: [MarsRover.ListMarsRoverPhotos.ViewModel.MarsRoverPhoto] = []

        for photoInfo in photosInfo ?? [] {
            guard let url = URL(string: photoInfo.imageSource ?? "") else {
                continue
            }
            let marsRoverPhoto = MarsRover.ListMarsRoverPhotos.ViewModel.MarsRoverPhoto(photosUrl: url)
            marsRoverPhotos.append(marsRoverPhoto)
        }

        return MarsRover.ListMarsRoverPhotos.ViewModel(marsRoverPhotos: marsRoverPhotos)
    }
}
